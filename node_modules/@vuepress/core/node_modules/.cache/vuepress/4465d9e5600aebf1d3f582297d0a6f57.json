{"remainingRequest":"/home/xjl/jiale/SeniorArchitect/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/xjl/jiale/SeniorArchitect/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/xjl/jiale/SeniorArchitect/node_modules/vue-loader/lib/index.js??ref--1-1!/home/xjl/jiale/SeniorArchitect/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/xjl/jiale/SeniorArchitect/docs/leetcode/010_正则表达式匹配.md?vue&type=template&id=5247b34c&","dependencies":[{"path":"/home/xjl/jiale/SeniorArchitect/docs/leetcode/010_正则表达式匹配.md","mtime":1657290093440},{"path":"/home/xjl/jiale/SeniorArchitect/node_modules/cache-loader/dist/cjs.js","mtime":1657022965586},{"path":"/home/xjl/jiale/SeniorArchitect/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1657025278618},{"path":"/home/xjl/jiale/SeniorArchitect/node_modules/cache-loader/dist/cjs.js","mtime":1657022965586},{"path":"/home/xjl/jiale/SeniorArchitect/node_modules/vue-loader/lib/index.js","mtime":1657025278618},{"path":"/home/xjl/jiale/SeniorArchitect/node_modules/@vuepress/markdown-loader/index.js","mtime":1657022965437}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}